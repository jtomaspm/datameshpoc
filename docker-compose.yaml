
volumes:
  postgres_data: {}
  logsFTP_data: {}
  redis_data: {}

services:
  person-system-api:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./person-system-api
    ports:
      - '8081:8080'
    depends_on:
      - postgres
      - redis
      - log-process-api

  log-process-api:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./log-process-api
    ports:
      - '8082:8080'
    depends_on:
      - logsFTP
      - redis

  client-system-api:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./client-system-api
    ports:
      - '8083:8080'
    depends_on:
      - postgres
      - redis
      - log-process-api
      - person-system-api

  client-process-api:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./client-process-api
    ports:
      - '8084:8080'
    depends_on:
      - client-system-api
      - person-system-api
      - log-process-api
      - redis

  card-system-api:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./card-system-api
    ports:
      - '8085:8080'
    depends_on:
      - client-system-api
      - log-process-api
      - redis

  transaction-system-api:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./transaction-system-api
    ports:
      - '8086:8080'
    depends_on:
      - card-system-api
      - log-process-api
      - redis

  datafeed-process-service:
    restart: always
    build:
      dockerfile: dockerfile
      context: ./datafeed-process-service
    ports:
      - '8087:8080'
    depends_on:
      - client-system-api
      - person-system-api

  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P0stgr3sP4ssw0rd
    ports:
      - '5432:5432'

  logsFTP:
    image: delfer/alpine-ftp-server
    restart: always
    ports:
      - '21:21'
      - '21000-21010:21000-21010'
    volumes:
      - logsFTP_data:/ftp/admin
    environment:
      - USERS=admin|1234
  
  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - '6379:6379'
      - '8001:8001'
    volumes:
      - redis_data:/data
    environment:
      - REDIS_ARGS="--requirepass 1234"
  